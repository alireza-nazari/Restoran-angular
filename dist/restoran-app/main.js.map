{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/role-guard.service.ts","webpack:///./src/app/auth/status.service.ts","webpack:///./src/app/auth/token.interceptor.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/meals.service.ts","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/menu/src-value.directive.ts","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/search.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { MenuComponent } from \"./menu/menu.component\";\nimport { OrdersComponent } from \"./orders/orders.component\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ItemComponent } from \"./menu/item/item.component\";\nimport { AuthComponent } from \"./auth/auth.component\";\nimport { AuthGuardService as AuthGuard } from \"./auth/auth-guard.service\";\nimport { RoleGuardService as RoleGuard } from \"./auth/role-guard.service\";\n\n\nconst appRoutes: Routes = [\n    {path: '', component: HomeComponent , canActivate: [AuthGuard],children: [\n        {path: 'meni', component: MenuComponent, canActivate: [AuthGuard]}\n    ]},\n    {path: 'home', component: HomeComponent, canActivate: [AuthGuard]},\n    {path: 'menu', component: MenuComponent, canActivate: [AuthGuard]},\n    {path: 'orders', component: OrdersComponent, canActivate: [RoleGuard, AuthGuard], data: {\n        role: 'admin'\n    }},\n    {path: 'login', component: AuthComponent},\n    {path: '**', redirectTo: '' }\n];\n@NgModule({\n    imports: [\n        RouterModule.forRoot(appRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AppRoutingModule{\n    \n}","\n<app-header *ngIf=\"status\"></app-header>\n<router-outlet *ngIf=\"status\"></router-outlet>\n<app-auth *ngIf=\"!status\" id=\"loginForm\"></app-auth>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  status: boolean;\n  constructor(private auth: AuthService){}\n  ngOnInit(){\n    this.status = this.auth.isAuthencticated();\n    console.log(this.status)\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { HeaderComponent } from './header/header.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\n\n\nimport { HttpModule } from '@angular/http';\nimport { MealsService } from './meals.service';\nimport { ItemComponent } from './menu/item/item.component';\nimport { SearchService } from './search.service';\n\nimport { AuthComponent } from './auth/auth.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from './auth/auth.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './auth/token.interceptor';\nimport { AuthGuardService } from './auth/auth-guard.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { RoleGuardService } from './auth/role-guard.service';\n\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { StatusService } from './auth/status.service';\nimport { SrcValueDirective } from './menu/src-value.directive';\n\n// export const JwtHelperService  = {\n//   provide: _JwtHelperService,\n//   useFactory: () => {\n//     return new _JwtHelperService();\n//   }\n// };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MenuComponent,\n    HeaderComponent,\n    OrdersComponent,\n    ItemComponent,\n    AuthComponent,\n    SrcValueDirective\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    NgbModule.forRoot(),\n    AppRoutingModule,\n    HttpModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AngularFontAwesomeModule\n  ],\n  providers: [\n    MealsService,\n    SearchService,\n    AuthService,\n    AuthGuardService,\n    JwtHelperService,\n    RoleGuardService,\n    StatusService,\n    \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CanActivate, Router } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate{\n    constructor(public auth: AuthService,\n                public router: Router ){}\n    \n    canActivate(): boolean{\n        if(!this.auth.isAuthencticated()){\n            this.router.navigate(['/login']); \n            return false; \n        }\n        return true; \n    }\n\n}","\n<div class=\"row d-flex justify-content-center\" id=\"formWrapper\">\n  <div class=\"col-xs-12 col-sm-12 col-md-12 d-flex justify-content-center\">\n      <form (ngSubmit)=\"onSingUp(f)\" #f=\"ngForm\">\n          <div class=\"form-group\">\n            <div id=\"imageWrapper\">\n            <img src=\"../../assets/imageedit_15_2018791835.png\" alt=\"\">\n          </div>\n            <label for=\"username\">Korisničko ime</label>\n            <input type=\"text\" id=\"user\" name=\"user\" ngModel class=\"form-control\">\n            <label for=\"password\">Lozinka</label>\n            <input type=\"password\" id=\"pass\" name=\"pass\" ngModel class=\"form-control\">\n          </div>\n          <button class=\"btn btn-primary\" type=\"submit\">Prijavi se</button>\n        </form>\n  </div>\n  <div class=\"alert alert-warning hide\" role=\"alert\" #alert id=\"alert\" [ngClass]=\"{'show': show, 'hide': !show}\">\n      Vaša sesija je istekla, molimo vas prijavite se ponovo!\n  </div>\n</div>","import { Component, OnInit, NgModule } from '@angular/core';\nimport {  FormsModule, NgForm } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../auth/auth.service';\n\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ]\n})\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit{\n\n  show: boolean;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(){\n  }\n  onSingUp(form: NgForm){\n    const user = form.value.user;\n    const pass = form.value.pass;\n    console.log(user, pass);\n    this.authService.singIn(user, pass);\n  }\n  \n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, } from \"@angular/common/http\";\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport decode from 'jwt-decode';\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Location } from '@angular/common';\nimport { StatusService } from \"./status.service\";\n\n\n@Injectable()\nexport class AuthService{\n    constructor(private http: HttpClient,\n                private jwtHelper: JwtHelperService,\n                private location: Location,\n                private router: Router,\n                private stat: StatusService){}\n    show: boolean = true;\n    private headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n    public getToken(): string{\n        return localStorage.getItem('token');\n    }\n    public isAuthencticated(): boolean{\n        const token = this.getToken();\n        // return !this.jwtHelper.isTokenExpired(token);\n        if(token !== null){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    public singIn(username: string, password: string){\n        \n        return this.http.post<any>(\"http://192.168.0.120:8080/narudzbina/webapi/klijenti/login\", {\n            username: username,\n            password: password\n        }, {headers: this.headers})\n        .subscribe(\n            (response: Response) => {\n                const data = JSON.stringify(response);\n                const novo = data.replace(/['\"]+/g, '');\n                localStorage.setItem('token', novo);\n                const tokenPayload = decode(novo);\n                localStorage.setItem('role', tokenPayload.role);\n                this.router.navigate(['/'])\n                location.reload(); \n            },\n            (err) => {\n                alert(\"Pogrešili ste lozinku\")\n            }            \n        );\n    }\n    public singOut(): void{\n        this.show = false;\n        localStorage.clear();\n        location.reload();\n    }\n}","import { AuthService } from \"./auth.service\";\nimport { Router, ActivatedRouteSnapshot, CanActivate } from \"@angular/router\";\n// import decode from 'jwt-decode';\nimport { Injectable } from \"@angular/core\";\n// import decode from 'jwt-decode';\n\nimport decode from 'jwt-decode';\n\n@Injectable()\nexport class RoleGuardService implements CanActivate{\n    \n    constructor(public auth: AuthService, public router: Router){}\n\n\n    canActivate(route: ActivatedRouteSnapshot,): boolean{\n        \n        const expectedRole = route.data.expectedRole;\n\n        const token = this.auth.getToken();\n        \n        // const tokenPayload = decode(token);\n        const tokenPayload = decode(token);\n        if(\n            !this.auth.isAuthencticated() || tokenPayload.role !== 'admin')\n            {\n            return false;\n        }else{\n            return true;\n        }\n    }\n\n}","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class StatusService{\n}","import { Injectable } from \"@angular/core\";\nimport { AuthService } from \"./auth.service\";\nimport {\n        HttpInterceptor,\n        HttpHandler,\n        HttpEvent,\n        HttpRequest\n\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    constructor(public auth: AuthService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler):\n    Observable<HttpEvent<any>>{\n        request = request.clone({\n            setHeaders: {\n                Authorization: `${this.auth.getToken()}`\n            }\n        });\n        return next.handle(request);\n    }\n}","<nav class=\"navbar navbar-expand-sm navbar-dark orange d-flex justify-content-center\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" href=\"#\" routerLink=\"\">Početna</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" href=\"#\" routerLink=\"/menu\">Meni</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" href=\"#\" routerLink=\"/orders\" *ngIf=\"status\">Narudzbine</a>\n    </li>\n  </ul>\n  <div class=\"d-flex justify-content-right\" id=\"singOutBtnWrapper\">\n   <button class=\"btn\" (click)=\"singout()\" id=\"singOutBtn\">Odjavi se</button>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  status: boolean;\n  tokenValue: string;\n  constructor(private auth: AuthService) { }\n\n  ngOnInit(){\n    this.tokenValue = localStorage.getItem('role');\n    if(this.tokenValue === 'admin'){\n      this.status = true;\n    }\n    else{\n      this.status = false;\n    }\n    \n  }\n  singout(){\n    this.auth.singOut();\n  }\n\n}\n","\n<div id=\"menuWrapper\">\n    <div id=\"imageWrapper\"><img src=\"../../assets/capcap-jela-sa-rostilja-pljeskavica-img_7994 (1).jpg\" alt=\"food\"></div>\n    <div id=\"heading\">\n        <h1>Gladni ste?</h1>\n        <div id=\"menuLinkDirect\"><a routerLink=\"/menu\">Pogledajte meni</a></div>\n    </div>\n    <div id=\"menuLink\"><a routerLink=\"/meni\">Naručite odmah</a></div>\n</div>\n<div  id=\"outletWrapper\">\n    <router-outlet></router-outlet>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(){ }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, } from \"@angular/common/http\";\nimport { HttpClient } from \"@angular/common/http\";\nimport 'rxjs/Rx';\nimport { NumberValueAccessor } from \"@angular/forms/src/directives\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"./auth/auth.service\";\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class MealsService{\n    constructor(private http: HttpClient,\n                private router: Router,\n                private auth: AuthService){}\n    private headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n    getMeals(){\n        return this.http.get(environment.apiBaseUrl +\"narudzbina/webapi/glavnojelo\")\n    }\n    getOrders(){\n        return this.http.get<any>(environment.apiBaseUrl + \"narudzbina/webapi/narudzbine\")\n    }\n    postMeal(meal: any){\n        return this.http.post<any>(environment.apiBaseUrl + \"narudzbina/webapi/narudzbine/\",{\n        glavno: {\n            id_glj: meal.id\n        },\n            kolicinaGlavnog: meal.amount\n        }, {headers: this.headers})\n        .subscribe(\n            data => console.log(data),\n            err => {\n                this.auth.singOut();\n                alert(\"Vaša sesija je istekla, morate se ponovo ulogovati\")\n            }\n        );\n    }\n}","<div id=\"list\" class=\"row\">\n    <ul id=\"menu\" *ngFor=\"let meal of meals\" >\n        <div class=\"card\">\n            <img appSrcValue class=\"card-img-top\" style=\"width:200px;\" src=\"http://www.beopopust.rs/uploaded_pictures/content/ponude/640x480/350-din-za-karadjordjevu-sniclu-sa-pomfritom-kolac-u-restoranu-dunavska-prica-958-1.jpg\"\n                alt=\"Card image\">    \n            <h4 class=\"card-title\" #name>{{ meal.naziv }}</h4>\n            <p class=\"card-text\">Cena po kg: {{meal.cena}} din</p>\n            <div ngbDropdown class=\"d-inline-block\"  #myDrop=\"ngbDropdown\">\n                <a class=\"btn btn-primary\" ngbDropdownToggle id=\"btnOrder\">Poruči</a>\n                <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\" id=\"dropDownContent\">\n                    <span> <fa name=\"times\" (click)=\"$event.stopPropagation(); myDrop.close();\" id=\"hideDrop\"></fa></span>\n                    <span>\n                        <p>Količina u gramima:</p>\n                    </span>\n                    <input type=\"number\" id=\"amountInput\" #amountInput>\n                    <br>\n                    <button class=\"btn btn-success\" (click)=\"postIt({id: meal.id_glj, amount: amountInput.value}, amountInput)\">Potvrdi</button>\n                </div>\n            </div>\n        </div>\n    </ul>\n    <router-outlet></router-outlet>\n    <div class=\"col-md-12\" id=\"alertWrapper\">\n        <div class=\"alert alert-success\" role=\"alert\" [hidden]=\"status\">\n            Uspešno ste izvršili narudzbinu\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MealsService } from '../meals.service';\nimport { Response } from '@angular/http';\nimport { SearchService } from '../search.service';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { map } from 'rxjs/operators';\nimport { Config } from 'protractor';\nimport { Router } from '@angular/router';\nimport { AuthGuardService } from '../auth/auth-guard.service';\nimport { SrcValueDirective } from './src-value.directive';\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit, AfterViewInit {\n  meals: any[];\n  status = true;\n  @ViewChild('name') name: ElementRef;\n  constructor(private mealsService: MealsService,\n              private searchService: SearchService,\n              private config: NgbDropdownConfig,\n              private router: Router,\n              private auth: AuthGuardService) {\n              config.autoClose = false;\n        }\n  \n  ngOnInit() {\n    this.mealsService.getMeals()\n    .subscribe((res: any[]) => {\n      this.meals = res;\n    });\n    \n  }\n  postIt(data: any, amountInput: HTMLInputElement){\n    this.mealsService.postMeal(data);\n    setInterval(() => {\n      this.status = true\n    }, 4000)\n    setTimeout(() => {\n      this.status = false;\n    }, 1)\n    console.log(this.name.nativeElement.value);\n  }\n  ngAfterViewInit(){\n    setTimeout(() => {\n      const name = this.name.nativeElement;\n      console.log(name);\n      if(name == 'karadjordjeva'){\n        console.log('karadjordjeva')\n      }\n      else{\n        console.log('ostalo')\n      }\n    }, 100);\n  }\n  showMenu(){\n    this.status = true;\n    console.log(status)\n  }\n  click(){\n    this.mealsService.getMeals()\n  }\n}\n","import { Directive, ElementRef, ViewChild} from '@angular/core';\n\n@Directive({\n  selector: '[appSrcValue]'\n})\nexport class SrcValueDirective{\n  constructor(private el: ElementRef) {\n    console.log(el.nativeElement.getAttribute('src'))\n  }\n  // setAttribute(data: string): void{\n  //     this.el.nativeElement.setAttribute('src', data);\n  // }\n}\n","\n<div class=\"container\">\n<h3>Porudzbine</h3>\n    <table border=\"1px solid black\" class=\"table table-striped\">\n        <tr>\n            <th>Broj porudzbine</th>\n            <th>Ime klijenta</th>\n            <th>Jelo</th>\n            <th>Količina jela</th>\n            <th>Datum narudzbine</th>\n        </tr>\n        <tr  *ngFor=\"let meal of meals; let i = index\">\n            <td>{{ meal.id_narudzbine }}</td>\n            <td>{{ meal.klijent.ime }}</td>\n            <td>{{ meal.glavno.naziv }}</td>\n            <td>{{ meal.kolicinaGlavnog }}</td>\n            <td>{{ meal.datumPorudzbine }}</td>\n        </tr>\n    </table>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MealsService } from '../meals.service';\nimport { AuthGuardService } from '../auth/auth-guard.service';\n\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  meals = [];\n  data = [];\n  \n  constructor(private mealService: MealsService) {\n    const date = new Date();\n    console.log(date);\n   }\n\n  ngOnInit() {\n    this.mealService.getOrders()\n    .subscribe(\n      (res: string[]) => this.meals = res,\n    );\n  }\n  \n}\n","import { Injectable } from \"@angular/core\";\nimport { Http, Response } from \"@angular/http\";\n\n@Injectable()\nexport class SearchService{\n    constructor(private http: Http){}\n    getImage(){\n\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: \"http://192.168.120.:8080/\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}